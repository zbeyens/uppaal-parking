Guessed query file: company01.q
Options for the verification:
  Generating some trace
  Search order is breadth first (UPPAAL), automatic (TIGA)
  Using conservative space optimisation
  Seed is 1495019041
  State space representation uses minimal constraint systems
[2K
Verifying property 1 at line 16
 -- Throughput: 4388 states/sec, Size: 20 states, Load: 8 states[K -- Throughput: 67154 states/sec, Size: 170 states, Load: 83 states[K -- Throughput: 65038 states/sec, Size: 1099 states, Load: 278 states[K -- Throughput: 27056 states/sec, Size: 5976 states, Load: 1230 states[KPreparing: 0%[KPreparing: 1%[KPreparing: 2%[KPreparing: 3%[KPreparing: 4%[KPreparing: 5%[KPreparing: 6%[KPreparing: 7%[KPreparing: 8%[KPreparing: 9%[KPreparing: 10%[KPreparing: 11%[KPreparing: 12%[KPreparing: 13%[KPreparing: 14%[KPreparing: 15%[KPreparing: 16%[KPreparing: 17%[KPreparing: 18%[KPreparing: 19%[KPreparing: 20%[KPreparing: 21%[KPreparing: 22%[KPreparing: 23%[KPreparing: 24%[KPreparing: 25%[KPreparing: 26%[KPreparing: 27%[KPreparing: 28%[KPreparing: 29%[KPreparing: 30%[KPreparing: 31%[KPreparing: 32%[KPreparing: 33%[KPreparing: 34%[KPreparing: 35%[KPreparing: 36%[KPreparing: 37%[KPreparing: 38%[KPreparing: 39%[KPreparing: 40%[KPreparing: 41%[KPreparing: 42%[KPreparing: 43%[KPreparing: 44%[KPreparing: 45%[KPreparing: 46%[KPreparing: 47%[KPreparing: 48%[KPreparing: 49%[KPreparing: 50%[KPreparing: 51%[KPreparing: 52%[KPreparing: 53%[KPreparing: 54%[KPreparing: 55%[KPreparing: 56%[KPreparing: 57%[KPreparing: 58%[KPreparing: 59%[KPreparing: 60%[KPreparing: 61%[KPreparing: 62%[KPreparing: 63%[KPreparing: 64%[KPreparing: 65%[KPreparing: 66%[KPreparing: 67%[KPreparing: 68%[KPreparing: 69%[KPreparing: 70%[KPreparing: 71%[KPreparing: 72%[KPreparing: 73%[KPreparing: 74%[KPreparing: 75%[KPreparing: 76%[KPreparing: 77%[KPreparing: 78%[KPreparing: 79%[KPreparing: 80%[KPreparing: 81%[KPreparing: 82%[KPreparing: 83%[KPreparing: 84%[KPreparing: 85%[KPreparing: 86%[KPreparing: 87%[KPreparing: 88%[KPreparing: 89%[KPreparing: 90%[KPreparing: 91%[KPreparing: 92%[KPreparing: 93%[KPreparing: 94%[KPreparing: 95%[KPreparing: 96%[KPreparing: 97%[KPreparing: 98%[KPreparing: 99%[K[2K -- Property is satisfied.
Initial state:
( Car(0).Sleep Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=0 counter=0 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
(Car(0).t_work==Car(0).t && Car(0).t==Car(1).t_work && Car(1).t_work==Car(1).t && Car(1).t==CarSalary(0).s && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==0)

Strategy to avoid losing:

State: ( Car(0).Sleep Car(1).Exited CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=2 rework=1 counter=0 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work<=CarSalary(0).s && Car(1).t<=Car(0).t_work && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work<3 && Car(1).t-Car(0).t_work<=-1 && Car(1).t<=CarSalary(0).s && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Sleep->Car(0).Outside { counter < counter_max, tau, t := 0, counter += 1 }

State: ( Car(0).Break Car(1).Exited CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (5<=Car(0).t_work && Car(1).t==3 && 1<=CarSalary(0).s && Car(0).t_work<6 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (3<=Car(0).t_work && Car(1).t==3 && Car(0).t_work-CarSalary(0).s<=2 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (4<=Car(0).t_work && Car(1).t==3 && Car(0).t_work<6 && Car(1).t==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (4<=Car(0).t_work && Car(1).t==3 && Car(0).t_work<6 && Car(1).t-CarSalary(0).s==3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (3<=Car(0).t_work && Car(1).t==3 && 2<=CarSalary(0).s && Car(0).t_work<6 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }
When you are in (4<=Car(0).t_work && Car(1).t==2 && Car(0).t_work<5 && Car(1).t-CarSalary(0).s==-1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (4<=Car(0).t_work && Car(1).t==2 && Car(0).t_work<5 && Car(1).t-CarSalary(0).s==2 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(1).t && 2<CarSalary(0).s && Car(0).t_work<4 && Car(1).t-Car(0).t_work<=-1 && Car(1).t<=CarSalary(0).s && CarSalary(0).s<=3 && CarSalary(0).s==CarSalary(1).s) || (3<=Car(0).t_work && Car(1).t==3 && Car(0).t_work<4 && Car(1).t==CarSalary(0).s && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (4<=Car(0).t_work && Car(1).t==3 && Car(0).t_work-CarSalary(0).s<=3 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work==2 && Car(0).t_work==Car(1).t && Car(1).t-CarSalary(0).s==-1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work==2 && Car(0).t_work==Car(1).t && Car(1).t-CarSalary(0).s==2 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t_work==3 && Car(0).t_work-Car(1).t==1 && Car(1).t-CarSalary(0).s==-1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work==3 && Car(0).t_work-Car(1).t==1 && Car(1).t-CarSalary(0).s==2 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t_work==2 && 2<=Car(1).t && Car(0).t_work-CarSalary(0).s==-1 && Car(1).t<=3 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (Car(0).t_work==3 && Car(0).t_work==Car(1).t && Car(1).t==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work==3 && Car(0).t_work==Car(1).t && Car(1).t-CarSalary(0).s==3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(1).t && Car(0).t_work-Car(1).t<1 && Car(0).t_work<=CarSalary(0).s && Car(1).t<3 && Car(1).t<=Car(0).t_work && CarSalary(0).s<=3 && CarSalary(0).s-Car(0).t_work<1 && CarSalary(0).s==CarSalary(1).s) || (4<=Car(0).t_work && 2<=Car(1).t && 2<CarSalary(0).s && Car(0).t_work<5 && Car(1).t<=CarSalary(0).s && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Exited Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=2 rework=0 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(0).t && Car(0).t-Car(1).t_work<=-2 && Car(1).t_work<5 && Car(1).t_work-CarSalary(0).s==3 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s-Car(1).t_work==-3), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Exited Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=0 counter=0 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t-Car(1).t_work<=-2 && Car(1).t_work<3 && Car(1).t_work==CarSalary(0).s && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==Car(1).t_work), take transition Car(1).Sleep->Car(1).Outside { counter < counter_max, tau, t := 0, counter += 1 }

State: ( Car(0).Exited Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=1 rework=0 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(0).t && 2<=Car(1).t_work && Car(0).t<=3 && Car(1).t_work<4 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Exited Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=1 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(0).t && 2<=Car(1).t_work && Car(0).t<=3 && Car(1).t_work<4 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Break Car(1).Exited CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=1 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(0).t_work && 2<=Car(1).t && Car(0).t_work<4 && Car(1).t<=3 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Break Car(1).Exited CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=2 rework=0 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(1).t && Car(0).t_work<5 && Car(0).t_work-CarSalary(0).s==3 && Car(1).t-Car(0).t_work<=-2 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s-Car(0).t_work==-3), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Exited Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=2 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(0).t && CarSalary(0).s==3 && Car(0).t-Car(1).t_work<=-1 && Car(1).t_work<4 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (2<=Car(0).t && Car(0).t-Car(1).t_work<=-1 && Car(1).t_work<4 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t==3 && 3<=Car(1).t_work && Car(0).t==CarSalary(0).s && Car(1).t_work<4 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t==3 && 3<=Car(1).t_work && Car(0).t-CarSalary(0).s==3 && Car(1).t_work<4 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(0).t && Car(0).t<=3 && Car(0).t<=Car(1).t_work && Car(1).t_work-CarSalary(0).s<=2 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (2<=Car(0).t && Car(0).t<=3 && Car(0).t-Car(1).t_work<=-1 && Car(1).t_work-CarSalary(0).s<=3 && CarSalary(0).s<2 && CarSalary(0).s-Car(1).t_work<-2 && CarSalary(0).s==CarSalary(1).s) || (2<=Car(0).t && Car(1).t_work==2 && Car(0).t<=3 && Car(1).t_work-CarSalary(0).s==-1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (2<=Car(0).t && Car(1).t_work==2 && Car(0).t<=3 && Car(1).t_work-CarSalary(0).s==2 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(0).t && 2<Car(1).t_work && CarSalary(0).s==3 && Car(0).t<3 && Car(0).t<=Car(1).t_work && Car(1).t_work<=3 && Car(1).t_work-Car(0).t<1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (2<=Car(0).t && 2<Car(1).t_work && Car(0).t<3 && Car(0).t<=Car(1).t_work && Car(1).t_work<=3 && Car(1).t_work-Car(0).t<1 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(0).t && Car(0).t-Car(1).t_work<=-2 && Car(0).t-CarSalary(0).s<=2 && Car(1).t_work<5 && CarSalary(0).s-Car(1).t_work<-3 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t==3 && 1<=CarSalary(0).s && Car(1).t_work<5 && CarSalary(0).s-Car(1).t_work<=-3 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t==3 && 3<=Car(1).t_work && Car(1).t_work<4 && Car(1).t_work-CarSalary(0).s<=3 && CarSalary(0).s-Car(1).t_work<-2 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }
When you are in (Car(0).t==3 && 4<=Car(1).t_work && Car(1).t_work<6 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }

State: ( Car(0).Break Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=0 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(0).t_work && Car(0).t_work<3 && Car(0).t_work==Car(1).t_work && Car(1).t_work==CarSalary(0).s && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==Car(0).t_work), take transition Car(0).Break->Car(0).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }

State: ( Car(0).Break Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=1 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work<4 && Car(1).t_work<1 && Car(1).t_work-Car(0).t_work<=-2 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Sleep Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=0 counter=0 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work<1 && Car(0).t_work==Car(1).t_work && Car(1).t_work==CarSalary(0).s && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==Car(0).t_work), take transition Car(1).Sleep->Car(1).Outside { counter < counter_max, tau, t := 0, counter += 1 }

State: ( Car(0).Sleep Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (1<=Car(0).t_work && Car(1).t_work==5 && Car(0).t_work<=2 && Car(1).t_work-CarSalary(0).s==2 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (1<=Car(0).t_work && Car(1).t_work==5 && Car(0).t_work<=2 && Car(1).t_work-CarSalary(0).s==5 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (CarSalary(0).s==2 && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work<=4 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==2) || (1<=Car(0).t_work && 5<Car(1).t_work && CarSalary(0).s==3 && Car(0).t_work-Car(1).t_work<=-4 && Car(1).t_work<6 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (1<=Car(0).t_work && 5<Car(1).t_work && Car(0).t_work-Car(1).t_work<=-4 && Car(1).t_work<6 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(0).t_work && 1<=CarSalary(0).s && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work<6 && CarSalary(0).s<=Car(0).t_work && CarSalary(0).s==CarSalary(1).s) || (4<Car(1).t_work && CarSalary(0).s==2 && Car(0).t_work-Car(1).t_work<=-4 && Car(1).t_work<5 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==2) || (5<=Car(1).t_work && Car(0).t_work-Car(1).t_work<=-3 && Car(0).t_work<CarSalary(0).s && Car(1).t_work-CarSalary(0).s<=3 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-Car(1).t_work<=-5 && Car(0).t_work-CarSalary(0).s<=-1 && Car(1).t_work<6 && CarSalary(0).s-Car(1).t_work<-3 && CarSalary(0).s==CarSalary(1).s) || (4<=Car(1).t_work && Car(0).t_work-CarSalary(0).s==-3 && Car(1).t_work<6 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (4<=Car(1).t_work && Car(0).t_work==CarSalary(0).s && Car(1).t_work<6 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (1<=Car(0).t_work && Car(0).t_work-CarSalary(0).s<-1 && Car(1).t_work-Car(0).t_work<4 && CarSalary(0).s<3 && CarSalary(0).s-Car(1).t_work<-2 && CarSalary(0).s==CarSalary(1).s) || (1<=Car(0).t_work && Car(0).t_work-Car(1).t_work<=-4 && Car(0).t_work<=CarSalary(0).s && Car(1).t_work<6 && CarSalary(0).s-Car(1).t_work<=-3 && CarSalary(0).s==CarSalary(1).s) || (2<=CarSalary(0).s && Car(0).t_work<CarSalary(0).s && Car(1).t_work<6 && Car(1).t_work-Car(0).t_work<4 && CarSalary(0).s-Car(1).t_work<-3 && CarSalary(0).s==CarSalary(1).s) || (2<=Car(0).t_work && 2<=CarSalary(0).s && Car(0).t_work<3 && Car(0).t_work-Car(1).t_work<=-2 && Car(1).t_work-Car(0).t_work<3 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (1<=Car(0).t_work && 4<=Car(1).t_work && CarSalary(0).s==2 && Car(0).t_work<2 && Car(1).t_work<=5 && Car(1).t_work-Car(0).t_work<4 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==2) || (2<=Car(0).t_work && 5<=Car(1).t_work && Car(0).t_work<3 && Car(1).t_work<6 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(0).t_work && 5<=Car(1).t_work && CarSalary(0).s==3 && Car(0).t_work<3 && Car(1).t_work<6 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0), take transition Car(1).Break->Car(1).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }
When you are in (1<=Car(0).t_work && CarSalary(0).s==3 && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work<5 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (1<=Car(0).t_work && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work<5 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (4<=Car(1).t_work && 2<CarSalary(0).s && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work-CarSalary(0).s<=2 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (2<CarSalary(0).s && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work<4 && CarSalary(0).s<=3 && CarSalary(0).s==CarSalary(1).s) || (2<CarSalary(0).s && Car(0).t_work-Car(1).t_work<=-4 && Car(1).t_work<5 && CarSalary(0).s-Car(1).t_work<-2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work-CarSalary(0).s<=2 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-Car(1).t_work<=-4 && Car(1).t_work-CarSalary(0).s<=3 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-Car(1).t_work==-2 && Car(1).t_work-CarSalary(0).s==-1 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (2<CarSalary(0).s && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work<5 && CarSalary(0).s-Car(0).t_work<=1 && CarSalary(0).s-Car(1).t_work<-2 && CarSalary(0).s==CarSalary(1).s) || (1<=Car(0).t_work && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work-CarSalary(0).s<=3 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-Car(1).t_work==-3 && Car(1).t_work==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work-Car(1).t_work==-3 && Car(1).t_work-CarSalary(0).s==3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (0<Car(0).t_work && Car(1).t_work==3 && Car(0).t_work<1 && Car(1).t_work==CarSalary(0).s && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (4<=Car(1).t_work && 2<CarSalary(0).s && Car(0).t_work<2 && Car(1).t_work-Car(0).t_work<3 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Exited Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t==3 && 5<=Car(1).t_work && 1<=CarSalary(0).s && Car(1).t_work<6 && CarSalary(0).s<=2 && CarSalary(0).s-Car(1).t_work<-3 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t==3 && 3<=Car(1).t_work && 2<=CarSalary(0).s && Car(1).t_work<6 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t==3 && 4<=Car(1).t_work && Car(0).t-CarSalary(0).s==3 && Car(1).t_work<6 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t==3 && 4<=Car(1).t_work && Car(0).t==CarSalary(0).s && Car(1).t_work<6 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0), take transition Car(1).Break->Car(1).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }
When you are in (Car(0).t==2 && 4<=Car(1).t_work && Car(0).t-CarSalary(0).s==-1 && Car(1).t_work<5 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t==2 && 4<=Car(1).t_work && Car(0).t-CarSalary(0).s==2 && Car(1).t_work<5 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(0).t && 2<CarSalary(0).s && Car(0).t-Car(1).t_work<=-1 && Car(0).t<=CarSalary(0).s && Car(1).t_work<4 && CarSalary(0).s<=3 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t==3 && 3<=Car(1).t_work && Car(0).t==CarSalary(0).s && Car(1).t_work<4 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (Car(0).t==3 && 3<=Car(1).t_work && Car(1).t_work-CarSalary(0).s<=2 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t==3 && 4<=Car(1).t_work && Car(1).t_work-CarSalary(0).s<=3 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t==2 && Car(0).t==Car(1).t_work && Car(1).t_work-CarSalary(0).s==-1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t==2 && Car(0).t==Car(1).t_work && Car(1).t_work-CarSalary(0).s==2 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t==2 && Car(0).t-Car(1).t_work==-1 && Car(1).t_work==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t==2 && Car(0).t-Car(1).t_work==-1 && Car(1).t_work-CarSalary(0).s==3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(0).t && Car(1).t_work==2 && Car(0).t<=3 && Car(1).t_work-CarSalary(0).s==-1 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (Car(0).t==3 && Car(0).t==Car(1).t_work && Car(1).t_work==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t==3 && Car(0).t==Car(1).t_work && Car(1).t_work-CarSalary(0).s==3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(0).t && Car(0).t<3 && Car(0).t<=Car(1).t_work && Car(1).t_work-Car(0).t<1 && Car(1).t_work<=CarSalary(0).s && CarSalary(0).s<=3 && CarSalary(0).s-Car(1).t_work<1 && CarSalary(0).s==CarSalary(1).s) || (2<=Car(0).t && 4<=Car(1).t_work && 2<CarSalary(0).s && Car(0).t<=CarSalary(0).s && Car(1).t_work<5 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Break Car(1).Exited CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=1 rework=0 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(0).t_work && 2<=Car(1).t && Car(0).t_work<4 && Car(1).t<=3 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Sleep Car(1).Exited CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=1 counter=0 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work-CarSalary(0).s<=-1 && Car(1).t<=Car(0).t_work && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work<=CarSalary(0).s && Car(1).t-Car(0).t_work<=-1 && CarSalary(0).s<3 && CarSalary(0).s-Car(0).t_work<1 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work==Car(1).t && Car(1).t-CarSalary(0).s==-3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work==Car(1).t && Car(1).t==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (1<CarSalary(0).s && Car(0).t_work<3 && Car(1).t-Car(0).t_work<=-2 && Car(1).t-CarSalary(0).s<=-1 && CarSalary(0).s<Car(0).t_work && CarSalary(0).s==CarSalary(1).s) || (1<=Car(0).t_work && Car(0).t_work<3 && Car(1).t==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (1<=Car(0).t_work && Car(0).t_work<3 && Car(1).t-CarSalary(0).s==-3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0), take transition Car(0).Sleep->Car(0).Outside { counter < counter_max, tau, t := 0, counter += 1 }

State: ( Car(0).Sleep Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=1 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work<1 && Car(0).t_work-Car(1).t_work<=-2 && Car(1).t_work<4 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Exited Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=2 rework=1 counter=0 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t<=Car(1).t_work && Car(1).t_work<=CarSalary(0).s && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t-Car(1).t_work<=-1 && Car(0).t<=CarSalary(0).s && Car(1).t_work<3 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Sleep->Car(1).Outside { counter < counter_max, tau, t := 0, counter += 1 }

State: ( Car(0).Break Car(1).Exited CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=2 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (4<=Car(0).t_work && Car(1).t==3 && Car(0).t_work<6 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }
When you are in (2<=Car(1).t && CarSalary(0).s==3 && Car(0).t_work<4 && Car(1).t-Car(0).t_work<=-1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (2<=Car(1).t && Car(0).t_work<4 && Car(1).t-Car(0).t_work<=-1 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (3<=Car(0).t_work && Car(1).t==3 && Car(0).t_work<4 && Car(1).t==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (3<=Car(0).t_work && Car(1).t==3 && Car(0).t_work<4 && Car(1).t-CarSalary(0).s==3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(1).t && Car(0).t_work-CarSalary(0).s<=2 && Car(1).t<=3 && Car(1).t<=Car(0).t_work && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (2<=Car(1).t && Car(0).t_work-CarSalary(0).s<=3 && Car(1).t<=3 && Car(1).t-Car(0).t_work<=-1 && CarSalary(0).s<2 && CarSalary(0).s-Car(0).t_work<-2 && CarSalary(0).s==CarSalary(1).s) || (3<=Car(0).t_work && Car(1).t==3 && Car(0).t_work-CarSalary(0).s<=3 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work==2 && 2<=Car(1).t && Car(0).t_work-CarSalary(0).s==-1 && Car(1).t<=3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work==2 && 2<=Car(1).t && Car(0).t_work-CarSalary(0).s==2 && Car(1).t<=3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(1).t && Car(0).t_work<5 && Car(1).t-Car(0).t_work<=-2 && Car(1).t-CarSalary(0).s<=2 && CarSalary(0).s-Car(0).t_work<-3 && CarSalary(0).s==CarSalary(1).s) || (2<Car(0).t_work && 2<=Car(1).t && CarSalary(0).s==3 && Car(0).t_work<=3 && Car(0).t_work-Car(1).t<1 && Car(1).t<3 && Car(1).t<=Car(0).t_work && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (2<Car(0).t_work && 2<=Car(1).t && Car(0).t_work<=3 && Car(0).t_work-Car(1).t<1 && Car(1).t<3 && Car(1).t<=Car(0).t_work && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(1).t==3 && 1<=CarSalary(0).s && Car(0).t_work<5 && CarSalary(0).s<2 && CarSalary(0).s-Car(0).t_work<-2 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Exited Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=1 counter=0 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t<=Car(1).t_work && Car(1).t_work-CarSalary(0).s<=-1 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t-Car(1).t_work<=-1 && Car(1).t_work<=CarSalary(0).s && CarSalary(0).s<3 && CarSalary(0).s-Car(1).t_work<1 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t==Car(1).t_work && Car(1).t_work-CarSalary(0).s==-3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t==Car(1).t_work && Car(1).t_work==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (1<CarSalary(0).s && Car(0).t-Car(1).t_work<=-2 && Car(0).t-CarSalary(0).s<=-1 && Car(1).t_work<3 && CarSalary(0).s<Car(1).t_work && CarSalary(0).s==CarSalary(1).s) || (1<=Car(1).t_work && Car(0).t==CarSalary(0).s && Car(1).t_work<3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (1<=Car(1).t_work && Car(0).t-CarSalary(0).s==-3 && Car(1).t_work<3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0), take transition Car(1).Sleep->Car(1).Outside { counter < counter_max, tau, t := 0, counter += 1 }

State: ( Car(0).Break Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=2 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (5<=Car(0).t_work && 1<=Car(1).t_work && Car(0).t_work-CarSalary(0).s<=5 && Car(1).t_work-CarSalary(0).s<=1 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s) || (1<=Car(1).t_work && Car(0).t_work<6 && Car(1).t_work-Car(0).t_work<=-4 && CarSalary(0).s-Car(0).t_work<-5 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-CarSalary(0).s<=5 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s<1 && CarSalary(0).s-Car(1).t_work<-1 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work<6 && Car(1).t_work-Car(0).t_work<=-4 && Car(1).t_work<=CarSalary(0).s && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s) || (5<=Car(0).t_work && 2<=Car(1).t_work && Car(0).t_work<6 && Car(1).t_work<3 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }
When you are in (CarSalary(0).s==3 && Car(0).t_work<4 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work<4 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t_work==2 && Car(0).t_work-Car(1).t_work==2 && Car(1).t_work-CarSalary(0).s==-3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work==2 && Car(0).t_work-Car(1).t_work==2 && Car(1).t_work==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (1<=Car(1).t_work && Car(0).t_work<5 && Car(1).t_work-Car(0).t_work<=-3 && Car(1).t_work-CarSalary(0).s<=1 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (4<=Car(0).t_work && 1<=CarSalary(0).s && Car(0).t_work<5 && Car(1).t_work-Car(0).t_work<-3 && Car(1).t_work<CarSalary(0).s && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (3<=Car(0).t_work && 1<=CarSalary(0).s && Car(0).t_work-Car(1).t_work<3 && Car(1).t_work<2 && Car(1).t_work-Car(0).t_work<=-2 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work==3 && 0<Car(1).t_work && Car(0).t_work-CarSalary(0).s==3 && Car(1).t_work<1 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t_work==3 && 0<Car(1).t_work && Car(0).t_work==CarSalary(0).s && Car(1).t_work<1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work-Car(1).t_work<4 && Car(0).t_work-CarSalary(0).s<=3 && Car(1).t_work<1 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Break Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work-CarSalary(0).s<=2 && Car(1).t_work-Car(0).t_work<=-3 && Car(1).t_work-CarSalary(0).s<=-2 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (1<=Car(1).t_work && CarSalary(0).s==3 && Car(0).t_work<6 && Car(1).t_work-Car(0).t_work<=-4 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (1<=Car(1).t_work && Car(0).t_work<6 && Car(1).t_work-Car(0).t_work<=-4 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (2<=Car(1).t_work && 1<=CarSalary(0).s && Car(0).t_work<6 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s<=Car(1).t_work && CarSalary(0).s==CarSalary(1).s) || (0<Car(1).t_work && CarSalary(0).s==2 && Car(0).t_work<=4 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==2) || (1<=Car(1).t_work && CarSalary(0).s==3 && Car(0).t_work<=5 && Car(0).t_work-Car(1).t_work<4 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (1<=Car(1).t_work && Car(0).t_work<=5 && Car(0).t_work-Car(1).t_work<4 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (4<Car(0).t_work && CarSalary(0).s==2 && Car(0).t_work<5 && Car(1).t_work-Car(0).t_work<=-4 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==2) || (Car(0).t_work<6 && Car(1).t_work-Car(0).t_work<=-5 && Car(1).t_work-CarSalary(0).s<=-1 && CarSalary(0).s-Car(0).t_work<-3 && CarSalary(0).s==CarSalary(1).s) || (4<=Car(0).t_work && Car(0).t_work<6 && Car(1).t_work-CarSalary(0).s==-3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (4<=Car(0).t_work && Car(0).t_work<6 && Car(1).t_work==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (1<=Car(1).t_work && Car(0).t_work<6 && Car(1).t_work-Car(0).t_work<=-4 && Car(1).t_work<=CarSalary(0).s && CarSalary(0).s-Car(0).t_work<=-3 && CarSalary(0).s==CarSalary(1).s) || (5<=Car(0).t_work && 2<=CarSalary(0).s && Car(0).t_work<6 && Car(0).t_work-Car(1).t_work<4 && Car(1).t_work-Car(0).t_work<=-3 && Car(1).t_work<CarSalary(0).s && CarSalary(0).s<3 && CarSalary(0).s-Car(1).t_work<=1 && CarSalary(0).s==CarSalary(1).s) || (5<=Car(0).t_work && Car(0).t_work-CarSalary(0).s<=3 && Car(1).t_work-CarSalary(0).s<-1 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (4<=Car(0).t_work && 1<=Car(1).t_work && CarSalary(0).s==2 && Car(0).t_work<=5 && Car(0).t_work-Car(1).t_work<4 && Car(1).t_work<2 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==2) || (2<=Car(1).t_work && 2<=CarSalary(0).s && Car(0).t_work-Car(1).t_work<3 && Car(1).t_work<3 && Car(1).t_work-Car(0).t_work<=-2 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s) || (5<=Car(0).t_work && 2<=Car(1).t_work && Car(0).t_work<6 && Car(1).t_work<3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (5<=Car(0).t_work && 2<=Car(1).t_work && CarSalary(0).s==3 && Car(0).t_work<6 && Car(1).t_work<3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0), take transition Car(0).Break->Car(0).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }
When you are in (CarSalary(0).s==3 && Car(0).t_work<4 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (2<CarSalary(0).s && Car(0).t_work-CarSalary(0).s<=2 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s<3 && CarSalary(0).s-Car(1).t_work<2 && CarSalary(0).s==CarSalary(1).s) || (2<CarSalary(0).s && Car(0).t_work<5 && Car(1).t_work-Car(0).t_work<=-4 && CarSalary(0).s-Car(0).t_work<-2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-CarSalary(0).s<=2 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-CarSalary(0).s<=3 && Car(1).t_work-Car(0).t_work<=-4 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (1<=Car(1).t_work && Car(0).t_work-CarSalary(0).s<=3 && Car(1).t_work-Car(0).t_work<=-3 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work==2 && Car(0).t_work-Car(1).t_work==2 && Car(1).t_work-CarSalary(0).s==-3 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (Car(0).t_work==3 && Car(0).t_work-Car(1).t_work==3 && Car(1).t_work-CarSalary(0).s==-3 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work==3 && Car(0).t_work-Car(1).t_work==3 && Car(1).t_work==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t_work==3 && 0<Car(1).t_work && Car(0).t_work==CarSalary(0).s && Car(1).t_work<1 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==3) || (4<=Car(0).t_work && 1<=Car(1).t_work && 2<CarSalary(0).s && Car(0).t_work<5 && Car(1).t_work<2 && CarSalary(0).s<3 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Sleep Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=0 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (2<=Car(0).t_work && Car(0).t_work<3 && Car(0).t_work==Car(1).t_work && Car(1).t_work==CarSalary(0).s && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==Car(0).t_work), take transition Car(1).Break->Car(1).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }

State: ( Car(0).Sleep Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=2 rework=1 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (1<=Car(0).t_work && Car(0).t_work-Car(1).t_work<=-4 && Car(1).t_work<6 && CarSalary(0).s-Car(1).t_work<-5 && CarSalary(0).s==CarSalary(1).s) || (1<=Car(0).t_work && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work-CarSalary(0).s<=5 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s) || (Car(0).t_work-Car(1).t_work<=-4 && Car(0).t_work<=CarSalary(0).s && Car(1).t_work<6 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s) || (2<=Car(0).t_work && 5<=Car(1).t_work && Car(0).t_work<3 && Car(1).t_work<6 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Exited { t_work < T_BURNOUT, tau, t := 0, counter -= 1 }
When you are in (CarSalary(0).s==3 && Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work<4 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work<4 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t_work-Car(1).t_work==-2 && Car(1).t_work-CarSalary(0).s==-1 && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0) || (Car(0).t_work-Car(1).t_work==-2 && Car(1).t_work-CarSalary(0).s==2 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (Car(0).t_work-Car(1).t_work<=-3 && Car(1).t_work-CarSalary(0).s<=3 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s) || (3<=Car(1).t_work && 1<=CarSalary(0).s && Car(0).t_work<2 && Car(0).t_work-Car(1).t_work<=-2 && Car(1).t_work<5 && CarSalary(0).s<2 && CarSalary(0).s==CarSalary(1).s) || (0<Car(0).t_work && Car(1).t_work==3 && Car(0).t_work<1 && Car(1).t_work-CarSalary(0).s==3 && CarSalary(0).s-CarSalary(1).s==-3 && CarSalary(1).s==3) || (0<Car(0).t_work && Car(1).t_work==3 && Car(0).t_work<1 && Car(1).t_work==CarSalary(0).s && CarSalary(0).s-CarSalary(1).s==3 && CarSalary(1).s==0), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Sleep Car(1).Break CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=1 rework=0 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work<1 && Car(0).t_work-Car(1).t_work<=-2 && Car(1).t_work<4 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(1).Break->Car(1).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }

State: ( Car(0).Sleep Car(1).Exited CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=3 rework=0 counter=0 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work<3 && Car(0).t_work==CarSalary(0).s && Car(1).t-Car(0).t_work<=-2 && CarSalary(0).s==CarSalary(1).s && CarSalary(1).s==Car(0).t_work), take transition Car(0).Sleep->Car(0).Outside { counter < counter_max, tau, t := 0, counter += 1 }

State: ( Car(0).Break Car(1).Sleep CarSalary(0).Salary CarSalary(1).Salary Company.Working ) money=1 rework=0 counter=1 burnout[0]=0 burnout[1]=0 Car(0).id=0 Car(1).id=1 CarSalary(0).id=0 CarSalary(1).id=1 
When you are in (Car(0).t_work<4 && Car(1).t_work<1 && Car(1).t_work-Car(0).t_work<=-2 && CarSalary(0).s<1 && CarSalary(0).s==CarSalary(1).s), take transition Car(0).Break->Car(0).Working { t_work < T_BURNOUT, tau, t := 0, rework := 1 }
