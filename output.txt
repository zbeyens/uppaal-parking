Guessed query file: parking.q
Options for the verification:
  Generating some trace
  Search order is breadth first (UPPAAL), automatic (TIGA)
  Using conservative space optimisation
  Seed is 1494851323
  State space representation uses minimal constraint systems
[2K
Verifying property 1 at line 6
 -- Throughput: 702 states/sec, Size: 20 states, Load: 8 states[K[2K -- Property is satisfied.
Showing example trace.
[2K
Verifying property 2 at line 11
[2K -- Property is satisfied.
Showing example trace.
[2K
Verifying property 3 at line 16
 -- Throughput: 9 states/sec, Size: 828 states, Load: 217 states[K -- Throughput: 18523 states/sec, Size: 1525 states, Load: 341 states[K -- Throughput: 92052 states/sec, Size: 4796 states, Load: 731 states[K[2K -- Property is NOT satisfied.
[2K
Verifying property 4 at line 21
[2K -- Property is NOT satisfied.
[2K
Verifying property 5 at line 26
 -- Throughput: 7 states/sec, Size: 20 states, Load: 8 states[K -- Throughput: 2111 states/sec, Size: 93 states, Load: 22 states[K -- Throughput: 41017 states/sec, Size: 1352 states, Load: 319 states[K -- Throughput: 51187 states/sec, Size: 8188 states, Load: 787 states[K[2K -- Property is satisfied.
[2K
Verifying property 6 at line 32
 -- Throughput: 6 states/sec, Size: 20 states, Load: 8 states[K -- Throughput: 32809 states/sec, Size: 1329 states, Load: 294 states[K -- Throughput: 109237 states/sec, Size: 6840 states, Load: 684 states[K[2K -- Property is satisfied.
[2K
Verifying property 7 at line 37
[2K -- Property is satisfied.
[2K
Verifying property 8 at line 42
[2K -- Property is satisfied.
[2K
Verifying property 9 at line 47
[2K -- Property is satisfied.
[2K
Verifying property 10 at line 52
[2K -- Property is satisfied.
[2K
Verifying property 11 at line 57
 -- Throughput: 5 states/sec, Size: 20 states, Load: 8 states[K -- Throughput: 14389 states/sec, Size: 636 states, Load: 202 states[K -- Throughput: 143357 states/sec, Size: 3281 states, Load: 708 states[KPreparing: 0%[KPreparing: 1%[KPreparing: 2%[KPreparing: 3%[KPreparing: 4%[KPreparing: 5%[KPreparing: 6%[KPreparing: 7%[KPreparing: 8%[KPreparing: 9%[KPreparing: 10%[KPreparing: 11%[KPreparing: 12%[KPreparing: 13%[KPreparing: 14%[KPreparing: 15%[KPreparing: 16%[KPreparing: 17%[KPreparing: 18%[KPreparing: 19%[KPreparing: 20%[KPreparing: 21%[KPreparing: 22%[KPreparing: 23%[KPreparing: 24%[KPreparing: 25%[KPreparing: 26%[KPreparing: 27%[KPreparing: 28%[KPreparing: 29%[KPreparing: 30%[KPreparing: 31%[KPreparing: 32%[KPreparing: 33%[KPreparing: 34%[KPreparing: 35%[KPreparing: 36%[KPreparing: 37%[KPreparing: 38%[KPreparing: 39%[KPreparing: 40%[KPreparing: 41%[KPreparing: 42%[KPreparing: 43%[KPreparing: 44%[KPreparing: 45%[KPreparing: 46%[KPreparing: 47%[KPreparing: 48%[KPreparing: 49%[KPreparing: 50%[KPreparing: 51%[KPreparing: 52%[KPreparing: 53%[KPreparing: 54%[KPreparing: 55%[KPreparing: 56%[KPreparing: 57%[KPreparing: 58%[KPreparing: 59%[KPreparing: 60%[KPreparing: 61%[KPreparing: 62%[KPreparing: 63%[KPreparing: 64%[KPreparing: 65%[KPreparing: 66%[KPreparing: 67%[KPreparing: 68%[KPreparing: 69%[KPreparing: 70%[KPreparing: 71%[KPreparing: 72%[KPreparing: 73%[KPreparing: 74%[KPreparing: 75%[KPreparing: 76%[KPreparing: 77%[KPreparing: 78%[KPreparing: 79%[KPreparing: 80%[KPreparing: 81%[KPreparing: 82%[KPreparing: 83%[KPreparing: 84%[KPreparing: 85%[KPreparing: 86%[KPreparing: 87%[KPreparing: 88%[KPreparing: 89%[KPreparing: 90%[KPreparing: 91%[KPreparing: 92%[KPreparing: 93%[KPreparing: 94%[KPreparing: 95%[KPreparing: 96%[KPreparing: 97%[KPreparing: 98%[KPreparing: 99%[K[2K -- Property is satisfied.
Initial state:
( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
(t_call==t_release && t_release==entrance.xOpen && entrance.xOpen==Car(0).t_starve && Car(0).t_starve==Car(0).t_path && Car(0).t_path==Car(1).t_starve && Car(1).t_starve==Car(1).t_path && Car(1).t_path==Car(2).t_starve && Car(2).t_starve==Car(2).t_path && Car(2).t_path==0)

Strategy to avoid losing:

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Exiting Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(2).t_path<=1 && Car(2).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=2 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (t_release<=32 && t_release-Car(0).t_path<32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<3 && t_release-Car(1).t_path==2 && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=120 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30) || (30<t_call && 30<t_release && 86<=Car(2).t_path && Car(2).t_path<=120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Working Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path-t_call==-30) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(1).t_path<=-28 && t_release==Car(2).t_path && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=3 && Car(1).t_path-t_call<-30 && Car(1).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=1 && Car(1).t_path<=120) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-4), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(0).t_path<=1 && Car(0).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(0).t_path<=1 && Car(0).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(2).t_path==30 && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path<=1) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=2 && Car(0).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(2).t_path==2 && Car(0).t_path<=120 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(0).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(1).t_path<=-28 && t_release==Car(2).t_path && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=120 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<3 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(1).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(1).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entering Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=2 && Car(1).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(2).t_path==2 && Car(1).t_path<=120 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(2).t_path && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(1).t_path==30 && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(2).t_path==2 && Car(0).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path<t_release), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(0).t_path==30 && t_release<32 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (30<t_call && 32<t_release && Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(0).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=2 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(1).t_path<=-28 && t_release==Car(2).t_path && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=3 && Car(2).t_path-t_call<-30 && Car(2).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-4), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (30<t_call && t_release<=32 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path<2 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path<=1 && t_release-Car(2).t_path==2 && Car(1).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<4 && t_release-Car(2).t_path==2 && Car(0).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path<32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 86<=Car(0).t_path && Car(0).t_path<=120) || (Car(0).t_path<86 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<3 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(1).t_path==30 && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(1).t_path==30 && t_release<32 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(1).t_path==2 && Car(0).t_path<=120 && Car(1).t_path==0) || (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entering Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path<=30) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(0).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (30<t_call && t_call-t_release<=28 && t_call-Car(2).t_path<31 && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(1).t_path==2 && Car(0).t_path<=120 && Car(1).t_path==0) || (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path-t_call==-30) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path<=3 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path<t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path<=1 && t_release-Car(2).t_path==2 && Car(1).t_path<=120) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-4), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(2).t_path && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(1).t_path && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=3 && Car(2).t_path<=120) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-4), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path<=30) || (30<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-t_release<29 && t_call-entrance.xOpen==30 && t_release-t_call<1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call==t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<32 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(1).t_path<=1 && Car(1).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entering Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 60<=t_release && t_call==Car(1).t_path && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<3 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=2 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(2).t_path && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=120) || (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<1 && Car(2).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<4 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-1) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(0).t_path==30 && t_release<32 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (30<t_call && 32<t_release && Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(1).t_path<=1 && Car(1).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(1).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entering Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<4 && t_release-Car(2).t_path==2 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path<32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(1).t_path<=1 && Car(1).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 60<=t_release && t_call==Car(0).t_path && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=3 && Car(2).t_path-t_call<-30 && Car(2).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-4), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(1).t_path==30 && t_release<32 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(1).t_path<=1 && Car(1).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (2<=t_release && entrance.xOpen==2 && t_release<4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exiting Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entering Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path<=30) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(2).t_path==2 && Car(1).t_path<=120 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=2 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(2).t_path && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<32 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(2).t_path==2 && Car(1).t_path<=120 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(0).t_path==0 && Car(1).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<3 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(2).t_path && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path==120) || (Car(2).t_path<120 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path<=-28 && t_release-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Outside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exiting Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(2).t_path && Car(2).t_path==1) || (30<=t_call && t_call<31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Working Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=120 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30) || (30<t_call && 30<t_release && Car(1).t_path==120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(1).t_path && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(1).t_path==30 && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(2).t_path==30 && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(0).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (t_release<=32 && t_release-Car(1).t_path<32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<3 && t_release-Car(2).t_path==2 && Car(1).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(1).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-1) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(2).t_path<=1 && Car(2).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<3 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(1).t_path==30 && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=2 && Car(0).t_path-t_call<-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(1).t_path==2 && Car(0).t_path<=120 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(2).t_path<=1 && Car(2).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Exiting Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(0).t_path==0 && Car(1).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Exiting Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path<=3 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path<t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(1).t_path==2 && Car(0).t_path<=120) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-4), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=120 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (30<t_call && 32<t_release && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Outside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(2).t_path==2 && Car(0).t_path<=120 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<3 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(2).t_path==30 && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(2).t_path && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=3 && Car(1).t_path<=120) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-4), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(1).t_path==30 && t_release<32 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(2).t_path<=1 && Car(2).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(0).t_path==30 && t_release<32 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(2).t_path<=30) || (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<31 && t_release-Car(2).t_path==2 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(2).t_path && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<3 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=3 && Car(2).t_path-t_call<-30 && Car(2).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-4), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(1).t_path==-30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(0).t_path==30 && t_release<32 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path==1) || (30<=t_call && t_call<31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path==1) || (30<=t_call && t_call<31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Working Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(2).t_path && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (t_release<=32 && t_release-Car(0).t_path<32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<3 && t_release-Car(2).t_path==2 && Car(0).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=120 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(1).t_path==30 && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Outside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=2 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(1).t_path && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<32 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Inside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(1).t_path<=-28 && t_release==Car(2).t_path && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exiting Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<1 && Car(2).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path<=-28 && t_release-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(2).t_path && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Working Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (t_release<=32 && t_release-Car(0).t_path<32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<3 && t_release-Car(2).t_path==2 && Car(0).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(1).t_path==-30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(2).t_path && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(2).t_path && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(1).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-1) || (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(2).t_path==2 && Car(0).t_path<=120 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 60<=t_release && t_call==Car(2).t_path && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path<=1 && t_release-Car(2).t_path==2 && Car(1).t_path<=120) || (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path-t_release<=-2), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<32 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<3 && Car(2).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<3 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 86<=Car(1).t_path && Car(1).t_path<=120) || (Car(1).t_path<86 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(1).t_path==30 && Car(1).t_path==0 && Car(2).t_path<=30) || (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<31 && t_release-Car(2).t_path==2 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<3 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=2 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<3 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<1 && Car(2).t_path-t_call<-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(0).t_path==30 && t_release<32 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (30<t_call && 32<t_release && Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<32 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<3 && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(1).t_path && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(2).t_path==30 && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (30<t_call && 32<t_release && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(2).t_path==30 && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(1).t_path && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(0).t_path<=1 && Car(0).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(2).t_path==30 && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=1 && Car(1).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-1) || (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path-t_release<=-2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(1).t_path<=-28 && t_release==Car(2).t_path && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Inside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=3 && Car(1).t_path-t_call<-30 && Car(1).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=1 && Car(1).t_path<=120) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-4), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Exiting Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && t_release==2 && t_call<31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path<=3 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path<t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(2).t_path==2 && Car(0).t_path<=120) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-4), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(1).t_path==-30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(2).t_path==2 && Car(0).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path<2 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=120 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30) || (30<t_call && 30<t_release && Car(0).t_path==120), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<1 && Car(1).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(2).t_path && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=3 && Car(1).t_path-t_call<-30 && Car(1).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=1 && Car(1).t_path<=120) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-4), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(2).t_path==2 && Car(0).t_path<=120) || (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path-t_release<=-2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Inside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 26<=Car(0).t_path && Car(0).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }
When you are in (30<t_release && Car(0).t_path<26 && Car(0).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path==1) || (30<=t_call && t_call<31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=120 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30) || (30<t_call && 30<t_release && Car(2).t_path==120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<3 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path<=1) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=120 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=120) || (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<1 && Car(2).t_path-t_call<-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(1).t_path==30 && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path==120) || (Car(1).t_path<120 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(2).t_path<=1 && Car(2).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path<2 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(2).t_path==2 && Car(0).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3) || (30<t_call && 30<t_release && Car(0).t_path==30 && t_release<32 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path<32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=120 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30) || (30<t_call && 30<t_release && 86<=Car(2).t_path && Car(2).t_path<=120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(0).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Outside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(1).t_path<=30) || (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<31 && t_release-Car(1).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 26<=Car(1).t_path && Car(1).t_path<=120) || (30<t_release && Car(1).t_path<26 && Car(1).t_path-t_call<-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30) || (30<t_call && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (2<=t_release && t_release-t_call<-28 && t_release-entrance.xOpen<1 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(0).t_path<=1 && Car(0).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(2).t_path<=1 && Car(2).t_path-t_call<-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path<=-28 && t_release-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(1).t_path<=-28 && Car(1).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=3 && Car(2).t_path<=120) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-4), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(1).t_path<=1 && Car(1).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(1).t_path==30 && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(1).t_path && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<32 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<3 && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path==120) || (Car(0).t_path<120 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path-t_call==-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(0).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<3 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (30<t_call && t_release<=32 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path<=1 && t_release-Car(2).t_path==2 && Car(1).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path<2 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path<=-28 && t_release-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && t_release==2 && t_call<31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(2).t_path==30 && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Entering Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(1).t_path && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(1).t_path==2 && Car(0).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path<2 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (t_release<=32 && t_release-Car(0).t_path<32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<3 && t_release-Car(1).t_path==2 && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(1).t_path==30 && Car(0).t_path<=30 && Car(1).t_path==0) || (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<31 && t_release-Car(0).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(1).t_path && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=120 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30) || (30<t_call && 30<t_release && Car(0).t_path==120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=2 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path<=-28 && t_release-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(1).t_path && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path<2 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(1).t_path==2 && Car(0).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path<=30) || (30<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-t_release<29 && t_call-entrance.xOpen==30 && t_release-t_call<1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=3 && t_release-Car(1).t_path==2 && Car(0).t_path<=120) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-4), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (30<t_call && t_call-t_release<=28 && t_call-Car(2).t_path<31 && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-1) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=3 && Car(2).t_path-t_call<-30 && Car(2).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-4), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=3 && Car(2).t_path-t_call<-30 && Car(2).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-4), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(1).t_path<=1 && Car(1).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(2).t_path && Car(1).t_path<=30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(1).t_path==30 && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<4 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=120 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(2).t_path && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(1).t_path<=-28 && Car(1).t_path<=30) || (30<t_call && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (2<=t_release && t_release-t_call<-28 && t_release-entrance.xOpen<1 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-1) || (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exiting Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Entering ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(1).t_path==2 && Car(0).t_path<=120) || (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path-t_release<=-2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 86<=Car(0).t_path && Car(0).t_path<=120) || (Car(0).t_path<86 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entering Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Working Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=120 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30) || (30<t_call && 30<t_release && 86<=Car(1).t_path && Car(1).t_path<=120), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(2).t_path==30 && Car(0).t_path<=30 && Car(2).t_path==0) || (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<31 && t_release-Car(0).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exiting Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Inside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(1).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(1).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=3 && t_release-Car(2).t_path==2 && Car(0).t_path<=120) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-4), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(0).t_path<=1 && Car(0).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path<=1 && t_release-Car(2).t_path==2 && Car(1).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path<t_release), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(1).t_path==-30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Entered Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(0).t_path==0 && Car(1).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<3 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<3 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path<=-28 && t_release-Car(2).t_path==1 && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exiting Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path==1 && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=2 && Car(0).t_path-t_call<-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(1).t_path==2 && Car(0).t_path<=120 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(2).t_path && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(1).t_path && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (t_release<=32 && t_release-Car(1).t_path<32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<3 && t_release-Car(2).t_path==2 && Car(1).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(1).t_path<=-28 && t_release==Car(2).t_path && Car(1).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=3 && Car(2).t_path-t_call<-30 && Car(2).t_path<=t_release) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<=1 && Car(2).t_path<=120) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-4), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(1).t_path && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(2).t_path==30 && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=2 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Entered ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(0).t_path<=1 && entrance.xOpen==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path-t_call==-30) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<1 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path<=30) || (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(2).t_path && Car(2).t_path==1) || (30<=t_call && t_call<31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Inside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<4 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<32 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path==1) || (30<=t_call && t_call<31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(2).t_path==30 && Car(1).t_path<=30 && Car(2).t_path==0) || (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<31 && t_release-Car(1).t_path==2 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(2).t_path==2 && Car(0).t_path<=120 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(2).t_path==2 && Car(1).t_path<=120 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(1).t_path==1 && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Inside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(1).t_path==2 && Car(0).t_path<=120 && Car(1).t_path==0) || (t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(2).t_path && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(2).t_path<=-28 && Car(2).t_path<=30) || (30<t_call && 1<=entrance.xOpen && t_release-entrance.xOpen<30 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (2<=t_release && t_release-t_call<-28 && t_release-entrance.xOpen<1 && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=2 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(2).t_path && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (30<t_call && t_release<=32 && t_release-Car(0).t_path==2 && Car(2).t_path<=1 && Car(2).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<t_call && 30<t_release && entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(2).t_path==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==2 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=120 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(1).t_path==30 && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(0).t_path && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(0).t_path<=-28 && t_release-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Outside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(0).t_path==0 && Car(1).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Inside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entered Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path==30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path==2 && t_release-Car(2).t_path<32 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Exiting Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(2).t_path && Car(1).t_path==0 && Car(2).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Exiting Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(0).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(1).t_path<=120 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30) || (30<t_call && 30<t_release && Car(1).t_path==120), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(2).t_path<=1 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-entrance.xOpen==30 && t_release-t_call<=1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30) || (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(0).t_path==0 && Car(1).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Outside Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(1).t_path), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Home Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(1).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1) || (t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (30<t_call && 32<t_release && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Outside Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(1).t_path && t_release<=32 && t_release-Car(0).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<t_release && t_call-entrance.xOpen==30 && t_call-Car(1).t_path<=1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path<=30) || (30<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<=t_call && 2<=t_release && t_call<=31 && t_call-t_release<29 && t_call-entrance.xOpen==30 && t_release-t_call<1 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(0).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(2).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<4 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-1) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path==120) || (Car(0).t_path<120 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(1).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(1).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(1).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(1).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(2).t_path==30 && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<=4 && Car(2).t_path<=1) || (t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(2).t_path<32 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Outside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Break Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Exiting Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(0).t_path==2 && entrance.xOpen==Car(1).t_path && Car(0).t_path==0 && Car(1).t_path-t_call==-30) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==-1 && Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Break Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (Car(2).t_path<=120 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30) || (30<t_call && 30<t_release && Car(2).t_path==120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entering Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(1).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(0).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path==1 && entrance.xOpen-Car(1).t_path<=-28 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Working Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=120), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Outside ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(2).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Exiting Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(1).t_path==1), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).EnterRequest Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<3 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<-1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Outside Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(1).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(1).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(1).t_path==30 && Car(0).t_path<=30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_release==2 && t_call<=31 && t_call-entrance.xOpen==30 && t_release-Car(2).t_path==2 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<31 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (31<t_call && t_release==2 && t_release-entrance.xOpen==1 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path<=120), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(2).t_path==30 && t_release<=31 && t_release-Car(0).t_path==2 && Car(2).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(0).t_path && t_call-Car(2).t_path==30 && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(2).t_path==2), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && Car(0).t_path<=1 && Car(0).t_path-t_call<-30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Entering Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(2).t_path==2 && Car(0).t_path<=1) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30 && Car(0).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(1).t_path==-28 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0) || (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Entering Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(2).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(1).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Working Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(0).t_path && t_release-Car(2).t_path==2 && Car(0).t_path<=120 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(0).t_path<1 && Car(0).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Home Car(1).ExitRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(2).t_path && t_release==Car(1).t_path && Car(1).t_path==0 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=entrance.xOpen && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Working ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(2).t_path==120) || (Car(2).t_path<120 && Car(2).t_path-t_call<-30 && Car(2).t_path-t_release<-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Working Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Inside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exiting Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release-Car(1).t_path==1 && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Inside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==1 && Car(0).t_path-Car(1).t_path==1 && Car(1).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(0).t_path-t_release<=-3), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Working Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(1).t_path==120) || (Car(1).t_path<120 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Inside ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=1 && Car(2).t_path-t_call<-30) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(0).t_path==2 && Car(0).t_path-Car(2).t_path==-1 && Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).Home Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Outside Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call==Car(1).t_path && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0 && Car(2).t_path<=1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0) || (30<t_call && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_release<=-3) || (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<3 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-1), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).ExitRequest Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(1).t_path && t_release==Car(0).t_path && Car(0).t_path==0 && Car(1).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Break Car(1).EnterRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(1).t_path && Car(1).t_path-t_call==-30), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Break Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Home ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release==-2 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=1 && Car(1).t_path<=120) || (30<t_call && t_call-t_release<=28 && t_call-Car(1).t_path<31 && t_release<=32 && t_release-Car(0).t_path==2 && t_release-Car(1).t_path<=4 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-Car(0).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Outside Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_release && t_call<=30 && t_call==Car(0).t_path), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).ExitRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(1).t_path && Car(0).t_path<=30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.ActivatedGate Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && entrance.xOpen==2 && t_release<=4 && t_release-t_call<-28 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 3<=t_release && entrance.xOpen==2 && t_release<=32 && t_release-Car(1).t_path==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0) || (30<t_call && 30<t_release && entrance.xOpen==2 && t_release<32 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30) || (30<t_call && 32<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path-Car(1).t_path==-30 && Car(1).t_path==30), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Exiting ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(2).t_path<=120), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Outside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call==Car(1).t_path && t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Home Car(2).Exited ) counter_call=0 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Inside Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && Car(0).t_path<=1), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Working Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_call-t_release<=28 && t_release<=32 && t_release-Car(0).t_path<=4 && t_release-Car(1).t_path==2 && Car(0).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(0).t_path<=1 && t_release-Car(1).t_path==2 && Car(0).t_path<=120) || (2<=t_release && t_release<=32 && t_release-Car(1).t_path==2 && Car(0).t_path-t_call<-30 && Car(0).t_path<t_release), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entered ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(2).t_path==2 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Outside Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==-28 && Car(0).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).Exiting ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=1 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 1<=t_release && t_release<=2 && t_release-Car(2).t_path==1), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Break Car(2).Exited ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(0).t_path && Car(0).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).Entering ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=1 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && 1<=entrance.xOpen && t_release-t_call<-28 && t_release-entrance.xOpen<=2 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 2<t_release && 1<=entrance.xOpen && t_release-entrance.xOpen<=30 && t_release-Car(0).t_path==2 && entrance.xOpen<=2 && entrance.xOpen-t_release<=-1 && entrance.xOpen-Car(2).t_path==1) || (30<t_call && 30<t_release && 1<=entrance.xOpen && entrance.xOpen-Car(0).t_path<=-28 && entrance.xOpen-Car(2).t_path==1 && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release-Car(0).t_path<=-28 && t_release==Car(2).t_path && Car(0).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Outside Car(1).Exited Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call-t_release<=-2 && t_call==Car(0).t_path && t_release<=32 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).EnterRequest Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(1).t_path==2 && Car(1).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).EnterRequest Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Entered Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release-t_call<-28 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path<=1) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<=-3) || (30<t_call && 30<t_release && t_release<32 && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30) || (30<t_call && 32<t_release && Car(1).t_path-Car(2).t_path==-30 && Car(2).t_path==30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=10 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Exited Car(1).EnterRequest Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(0).t_path==-30 && Car(0).t_path-Car(1).t_path==30 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(0).t_path<=1 && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path==2), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).EnterRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 2<=t_release && t_call-Car(0).t_path==30 && t_release<=31 && t_release-Car(2).t_path==2 && Car(0).t_path==0) || (t_call==30 && 30<t_release && 29<=Car(2).t_path && t_call-Car(0).t_path==30 && Car(0).t_path==0 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Home Car(2).Break ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).EnterRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-Car(0).t_path==30 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(2).t_path==2 && Car(1).t_path<=120 && Car(2).t_path==0) || (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Home Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Home Car(1).Working Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 2<t_release && t_release<=32 && t_release-Car(1).t_path<=4 && t_release-Car(2).t_path==2 && Car(1).t_path-t_release<=-2) || (2<=t_release && t_release<=32 && t_release-t_call<-28 && t_release-Car(1).t_path<=3 && t_release-Car(2).t_path==2 && Car(1).t_path<=120) || (t_release<=32 && t_release-Car(2).t_path==2 && Car(1).t_path-t_call<-30 && Car(1).t_path-t_release<-4), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.NotActivated Car(0).Entered Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=210 counter=2 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && entrance.xOpen==2 && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.ActivatedGate Car(0).Exited Car(1).Home Car(2).ExitRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 28<=Car(0).t_path && t_release==Car(2).t_path && Car(0).t_path<=30 && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.NotActivated Car(0).Break Car(1).ExitRequest Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release<=1 && t_release==Car(1).t_path), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Inside Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=410 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(2).t_path==2 && Car(1).t_path<=1 && Car(1).t_path-t_call<-30 && Car(2).t_path==0) || (30<t_call && t_release==2 && t_call<=31 && t_release-Car(1).t_path==1 && Car(1).t_path-Car(2).t_path==1 && Car(2).t_path==0), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Working Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<2 && Car(1).t_path-t_call<-30) || (30<t_call && t_release==2 && 1<=Car(1).t_path && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=120), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Home Car(1).Exited Car(2).Break ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(1).t_path==2 && Car(1).t_path==0), take transition Car(2).Break->Car(2).Working { 1, tau, t_path := 0 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<=t_call && t_call<=31 && t_call<t_release && t_call-entrance.xOpen==30 && entrance.xOpen==Car(2).t_path && Car(2).t_path-t_call==-30), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.ActivatedGate exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Entered Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=310 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release-Car(0).t_path==2 && Car(0).t_path==0 && Car(1).t_path<=1), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Closed entranceIn.ActivatedGate entranceOut.NotActivated exitIn.NotActivated exitOut.ActivatedGate Car(0).Break Car(1).Exited Car(2).EnterRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && 30<t_release && t_call-entrance.xOpen==30 && entrance.xOpen-Car(1).t_path==-30 && Car(1).t_path-Car(2).t_path==30 && Car(2).t_path==0), take transition Car(0).Break->Car(0).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.NotActivated exitOut.NotActivated Car(0).Home Car(1).Home Car(2).Working ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=110 counter=1 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && 30<t_release && 26<=Car(2).t_path && Car(2).t_path<=120) || (30<t_release && Car(2).t_path<26 && Car(2).t_path-t_call<-30), take transition Car(0).Home->Car(0).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Opened entranceIn.NotActivated entranceOut.NotActivated exitIn.ActivatedGate exitOut.ActivatedGate Car(0).ExitRequest Car(1).Home Car(2).Exited ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=0 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_release<=1 && t_release-t_call<-30 && t_release==Car(0).t_path && t_release-Car(2).t_path<=-28 && Car(2).t_path<=30), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).Home Car(1).Break Car(2).ExitRequest ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=510 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }

State: ( entrance.Closed exit.Opened entranceIn.Activated entranceOut.NotActivated exitIn.NotActivated exitOut.Activated Car(0).Exited Car(1).Home Car(2).EnterRequest ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=0 carEntranceIn=1 carEntranceOut=0 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=0 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (t_call==30 && t_call-t_release==28 && t_release-Car(0).t_path==2 && Car(0).t_path==Car(2).t_path && Car(2).t_path==0), take transition Car(1).Home->Car(1).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Opened exit.Opened entranceIn.NotActivated entranceOut.Activated exitIn.NotActivated exitOut.Activated Car(0).Entered Car(1).Exited Car(2).Home ) counter_call=1 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=610 counter=1 carEntranceIn=0 carEntranceOut=1 carEntering=0 carExitIn=0 carExitOut=1 carExiting=0 entranceOpened=1 exitOpened=1 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==2 && t_release==entrance.xOpen && entrance.xOpen-Car(0).t_path==2 && Car(0).t_path==Car(1).t_path && Car(1).t_path==0), take transition Car(2).Home->Car(2).Outside { t_call >= CALL_INTERVAL && counter_call < CALL_MAX, tau, t_call := 0, t_path := 0, counter_call += 1 }

State: ( entrance.Closed exit.Closed entranceIn.NotActivated entranceOut.NotActivated exitIn.Activated exitOut.NotActivated Car(0).ExitRequest Car(1).Break Car(2).Home ) counter_call=2 counter_release=0 wallets[0]=10 wallets[1]=15 wallets[2]=20 morals[0]=25 morals[1]=20 morals[2]=15 WORK[0]=120 WORK[1]=180 WORK[2]=240 GAIN[0]=100 GAIN[1]=15 GAIN[2]=20 money=710 counter=2 carEntranceIn=0 carEntranceOut=0 carEntering=0 carExitIn=1 carExitOut=0 carExiting=0 entranceOpened=0 exitOpened=0 Car(0).id=0 Car(1).id=1 Car(2).id=2 
When you are in (30<t_call && t_release==Car(0).t_path && Car(0).t_path==0), take transition Car(1).Break->Car(1).Working { 1, tau, t_path := 0 }
