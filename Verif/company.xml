<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

const int PERSONS = 2;
typedef int[0, PERSONS-1] person_t;


const int MAX_MONEY = 3;
int[0,MAX_MONEY+1] money = MAX_MONEY;
const int SALARY = 1;


const int T_SLEEP_MIN = 1;
const int T_IDLE_MAX = 1;
const int T_TRAVEL = 1;
const int T_WORK_MAX = 15;
const int T_WORK_CRITICAL = 10;
const int T_JOB = 1;


const int MONEY_CRITICAL = 2;
const int GAIN = 1;
const int COMPANY_EXPENSE = 1;


int[0,2] empty_posts = 2;
/*
void companyEarnMoney() {
	int[-2, MAX_MONEY+1] temp;
	temp = money + GAIN;
	if (temp &lt; MAX_MONEY) {
		money = temp;
	} else {
		money = MAX_MONEY;
	}
}
*/

void companyLooseMoney() {
	int[-2, MAX_MONEY+1] temp;
	temp = money - COMPANY_EXPENSE;
	if (temp &gt; 0) {
		money = temp;
	} else {
		money = 0;
	}
}

</declaration><template><name x="5" y="5">Person</name><parameter>person_t id</parameter><declaration>// Place local declarations here.
clock t;
clock t_working;
</declaration><location id="id0" x="744" y="-296"><name x="720" y="-336">Burnout</name></location><location id="id1" x="744" y="-136"><name x="704" y="-168">Break</name><urgent/></location><location id="id2" x="744" y="16"><name x="720" y="32">Working</name><label kind="invariant" x="720" y="48">t&lt;=T_JOB</label></location><location id="id3" x="-256" y="152"><name x="-272" y="184">Sleeping</name><label kind="invariant" x="-266" y="167">t&lt;=T_SLEEP_MIN</label></location><location id="id4" x="392" y="16"><name x="400" y="-16">WantToWork</name><label kind="invariant" x="392" y="32">t&lt;1</label><urgent/></location><location id="id5" x="136" y="-136"><name x="112" y="-168">OnTheRoad</name><label kind="invariant" x="80" y="-192">t&lt;=T_TRAVEL</label></location><location id="id6" x="-256" y="8"><name x="-304" y="-24">Home</name><label kind="invariant" x="-240" y="16">t&lt;=T_IDLE_MAX</label></location><init ref="id6"/><transition><source ref="id0"/><target ref="id0"/><nail x="816" y="-264"/><nail x="816" y="-296"/></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="760" y="-232">t_working&gt;=T_WORK_MAX</label></transition><transition><source ref="id1"/><target ref="id2"/><label kind="guard" x="912" y="-48">t_working&lt;=T_WORK_CRITICAL</label><label kind="assignment" x="912" y="-24">t=0</label><nail x="904" y="-136"/><nail x="904" y="16"/></transition><transition><source ref="id1"/><target ref="id5"/><label kind="guard" x="496" y="-128">t_working&lt;T_WORK_MAX</label><label kind="assignment" x="528" y="-176">empty_posts+=1,
t=0</label></transition><transition><source ref="id2"/><target ref="id1"/><label kind="guard" x="752" y="-64">t==T_JOB</label><label kind="assignment" x="752" y="-96">t=0</label></transition><transition><source ref="id5"/><target ref="id6"/><label kind="assignment" x="-88" y="-136">t=0</label><nail x="-256" y="-136"/></transition><transition><source ref="id4"/><target ref="id5"/><label kind="assignment" x="400" y="-40">t=0</label><nail x="392" y="-136"/></transition><transition><source ref="id4"/><target ref="id2"/><label kind="guard" x="568" y="16">empty_posts&gt;0</label><label kind="assignment" x="568" y="32">empty_posts-=1,
t=0</label></transition><transition><source ref="id3"/><target ref="id6"/><label kind="assignment" x="-408" y="72">t_working=0,
t=0</label><nail x="-320" y="88"/><nail x="-320" y="48"/></transition><transition><source ref="id6"/><target ref="id3"/><label kind="assignment" x="-248" y="72">t=0</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="guard" x="184" y="24">t_working&lt;T_WORK_CRITICAL</label><label kind="assignment" x="208" y="-8">t=0</label><nail x="192" y="16"/></transition><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="-104" y="16">t_working&lt;T_WORK_CRITICAL</label><label kind="assignment" x="-16" y="-24">t=0</label><nail x="72" y="8"/></transition></template><template><name>CompanyExpenses</name><declaration>clock s;
const int T_EXPENSE = 5;</declaration><location id="id7" x="8" y="0"></location><init ref="id7"/><transition><source ref="id7"/><target ref="id7"/><label kind="guard" x="-40" y="-88">s&gt;=T_EXPENSE</label><label kind="assignment" x="-40" y="-120">s=0,
companyLooseMoney()</label><nail x="-56" y="-64"/><nail x="48" y="-64"/></transition></template><template><name>PersonExpenses</name><parameter>person_t id</parameter><declaration>clock s;
const int T_EXPENSE = 5;</declaration><location id="id8" x="-144" y="8"><label kind="invariant" x="-152" y="16">s&lt;=T_EXPENSE</label></location><init ref="id8"/><transition><source ref="id8"/><target ref="id8"/><label kind="guard" x="-144" y="-88">s==T_EXPENSE</label><label kind="assignment" x="-144" y="-128">s=0,
companyLooseMoney()</label><nail x="-144" y="-64"/><nail x="-72" y="-64"/></transition></template><system>// Place template instantiations here.

system Person, CompanyExpenses;</system></nta>