<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

const int CARS = 2;
typedef int[0, CARS-1] car_t;

const int T_WORK = 1;
const int GAIN = 1;
const int MONEY_MAX = 5;
int[0,MONEY_MAX] money = 5;
//const int COST_UPGRADE = 1;
//const int MIN_UPGRADE = 4;
const int T_PATH = 1;
const int T_BURNOUT=15;
const int T_SALARY=5;
const int T_HOLIDAY=4;
const int SALARY=1;

//bool working[2] = {false,false};


int[0,2] counter_max = 1;
int[0,2] counter = 0;


//int[0,MONEY_MAX] wallets[CARS] = {4,4};

void addMoney() {
	int temp = money;
	temp += GAIN;
	if (temp &lt;= MONEY_MAX) {
		money=temp;
	} else {
		money=MONEY_MAX;
	}
}

void giveMoney() {
	int temp = money;
	temp -= SALARY;

	if (temp &gt;= 0) {
		money=temp;
	} else {
		money=0;
	}

	//temp = wallets[id];
	//temp += SALARY;
	//if (temp &lt;= MONEY_MAX) {
	//	wallets[id]=temp;
	//} else {
	//	wallets[id]=MONEY_MAX;
	//}
}

//void spendMoney(car_t id) {
//	int temp = wallets[id];
//	temp -= SALARY;
//
//	if (temp &gt;= 0) {
//		wallets[id]=temp;
//	} else {
//		wallets[id] = 0;
//	}
//}</declaration><template><name>Car</name><parameter>car_t id</parameter><declaration>clock t_work;
clock t;
clock t_holiday;

</declaration><location id="id0" x="-528" y="400" color="#00ffff"><name x="-584" y="408">Holiday</name><label kind="invariant" x="-600" y="424">t&lt;=T_HOLIDAY</label></location><location id="id1" x="600" y="232" color="#ff0000"><name x="590" y="202">Burnout</name></location><location id="id2" x="384" y="232" color="#ffa500"><name x="368" y="240">Break</name></location><location id="id3" x="-336" y="400" color="#00ffff"><name x="-360" y="408">Home</name></location><location id="id4" x="192" y="400" color="#00ffff"><name x="168" y="408">Exited</name><label kind="invariant" x="120" y="424">t&lt;= T_PATH</label></location><location id="id5" x="192" y="232" color="#ffa500"><name x="144" y="240">Working</name><label kind="invariant" x="120" y="256">t&lt;=T_WORK</label></location><location id="id6" x="-336" y="232" color="#ffa500"><name x="-360" y="200">Outside</name><label kind="invariant" x="-376" y="184">t &lt;= T_PATH</label></location><init ref="id3"/><transition controllable="false" action=""><source ref="id2"/><target ref="id1"/><label kind="guard" x="496" y="312">t_holiday &gt;= T_BURNOUT</label><nail x="536" y="312"/></transition><transition controllable="false" action=""><source ref="id0"/><target ref="id3"/><label kind="guard" x="-480" y="288">t==T_HOLIDAY</label><label kind="assignment" x="-492" y="400">t=0</label><nail x="-432" y="312"/></transition><transition color="#00ffff" action=""><source ref="id3"/><target ref="id0"/><label kind="assignment" x="-480" y="256">t=0,
t_holiday=0</label></transition><transition controllable="false" action=""><source ref="id1"/><target ref="id1"/><nail x="600" y="160"/><nail x="664" y="232"/></transition><transition color="#00ffff" action=""><source ref="id2"/><target ref="id4"/><label kind="guard" x="292" y="336">t_work &lt; T_BURNOUT</label><label kind="assignment" x="296" y="304">t=0,
counter-=1</label></transition><transition controllable="false" action=""><source ref="id6"/><target ref="id5"/><label kind="guard" x="-24" y="192">t==T_PATH</label><label kind="assignment" x="-24" y="208">t=0</label></transition><transition controllable="false" action=""><source ref="id2"/><target ref="id1"/><label kind="guard" x="408" y="184">t_work &gt;= T_BURNOUT</label></transition><transition controllable="false" action=""><source ref="id4"/><target ref="id3"/><label kind="guard" x="-176" y="424">t == T_PATH</label><label kind="assignment" x="-176" y="408">t=0, t_work=0</label></transition><transition color="#ffa500" action=""><source ref="id2"/><target ref="id5"/><label kind="guard" x="216" y="96">t_work &lt; T_BURNOUT</label><label kind="assignment" x="280" y="112">t=0</label><nail x="288" y="128"/></transition><transition controllable="false" action=""><source ref="id5"/><target ref="id2"/><label kind="guard" x="216" y="232">t==T_WORK</label><label kind="assignment" x="216" y="248">t=0,
addMoney()</label></transition><transition color="#ffa500" action=""><source ref="id3"/><target ref="id6"/><label kind="guard" x="-328" y="320">counter&lt;counter_max</label><label kind="assignment" x="-328" y="288">t=0,
counter+=1</label></transition></template><template><name>CarSalary</name><parameter>car_t id</parameter><declaration>clock s;</declaration><location id="id7" x="-344" y="-88" color="#00ffff"><name x="-320" y="-96">Paid</name><label kind="invariant" x="-344" y="-80">s&lt;=T_SALARY</label></location><init ref="id7"/><transition controllable="false" action=""><source ref="id7"/><target ref="id7"/><label kind="guard" x="-376" y="-216">s==T_SALARY</label><label kind="assignment" x="-376" y="-200">s=0,
giveMoney()</label><nail x="-408" y="-160"/><nail x="-272" y="-160"/></transition></template><template><name>Company</name><declaration>clock t;</declaration><location id="id8" x="104" y="-24" color="#ff0000"><name x="88" y="-16">Bankrupt</name></location><location id="id9" x="-112" y="-24" color="#ffa500"><name x="-136" y="-8">Working</name></location><init ref="id9"/><transition controllable="false" action=""><source ref="id8"/><target ref="id8"/><nail x="200" y="-96"/><nail x="200" y="56"/></transition><transition controllable="false" action=""><source ref="id9"/><target ref="id8"/><label kind="guard" x="-40" y="-24">money==0</label></transition></template><system>// Place template instantiations here.
// List one or more processes to be composed into a system.
system Car, CarSalary, Company;</system></nta>